############## Brew 2020 ##############

###### core tools ######
rcm			# see https://github.com/thoughtbot/rcmpwgen
wget
tmux


###### osx tools ######
lunchy		# see https://github.com/eddiezane/lunchy
afsctool	# apfs compression
mas			# mac app store tool
duti		# Select default apps for documents and URL schemes on macOS
tag			# Manipulate and query tags on macOS files https://github.com/jdberry/tag/



###### system tools ######
smartmontools


###### search tools ######
ack 					# see https://beyondgrep.com/
the_silver_searcher		# see https://github.com/ggreer/the_silver_searcher
ripgrep					# see https://github.com/BurntSushi/ripgrep
jq						# see https://github.com/stedolan/jq
fzf						# general-purpose interactive command-line fuzzy finder https://github.com/junegunn/fzf
fd						# find alternative		https://github.com/sharkdp/fd



###### other tools ######
pigz		# multithreaded zip
tree


###### more shell goodies ######
## see https://dev.to/_darrenburns/10-tools-to-power-up-your-command-line-4id4

z			# bash dir jump 		https://github.com/rupa/z
autojump	# dir jump 				https://github.com/wting/autojump
bat			# syntax highlighting 	https://github.com/sharkdp/bat
exa			# ls alternative
asciinema	# record terminal actions as animations https://asciinema.org/
			# dependancy: python 3.8
			# and then use 'svg-term' (npm) to convert to SVG  https://github.com/marionebl/svg-term-cli


###### cheatsheets ######
cheat					# now in golang					https://github.com/cheat/cheat
## tldr: Collaborative cheatsheets for console commands https://github.com/tldr-pages/tldr
#isacikgoz/taps/tldr		# interactive tldr in golang 	https://github.com/isacikgoz/tldr
tealdeer				# tldr in rust 					https://github.com/dbrgn/tealdeer




################## devel #################
rbenv					# see https://github.com/rbenv/rbenv
pyenv					# see https://github.com/pyenv/pyenv
direnv					# see https://github.com/direnv/direnv
node
dnsmasq					# for faking pow.cx
dive					# inspect docker layers
puma/puma/puma-dev		# pow.cx alternative https://github.com/puma/puma-dev

#wrk					# benchmarking your HTTP APIs			https://github.com/wg/wrk
						# also https://github.com/giltene/wrk2
						# A constant throughput, correct latency recording variant of wrk
bench					# code benchmarking tool in haskell		https://github.com/Gabriel439/bench
hyperfine				# code benchmarking tool in rust 		https://github.com/sharkdp/hyperfine




######### not used #########
antibody		# see https://github.com/getantibody/antibody
# antigen		# see https://github.com/zsh-users/antigen
chruby
ruby-install


######### git tools #########
hub			# see https://hub.github.com/
# gist
# git-crypt
# git-deploy
# git-extras
# git-flow
# git-url-sub
# gitsh
# legit		# see https://frostming.github.io/legit/

### manage git repos
repo		# manage multiple git repos https://gerrit.googlesource.com/git-repo/
ghq			# centralized cloned repos https://github.com/x-motemen/ghq
# mr		# last updated in 2018. Use 'repo' instead https://myrepos.branchable.com/

## also 'gita' in pip3. see https://github.com/nosarthur/gita



######## fonts #########
# Usage:
#     $ brew tap homebrew/cask-fonts                  # you only have to do this once!
#     $ brew cask install font-inconsolata




######### more #########

# osxutils		# see https://github.com/specious/osxutils
# notmuch
# unrar
# todo-txt
# doing
# tree
# gnupg2
# gpg-agent
# pinentry-mac
# autojump		# see https://github.com/wting/autojump


# android-platform-tools
# ansible
# appswitch  # DEAD formula, see https://github.com/nriley/appswitch/
# vcsh
# xapian
# go


# brew-cask
# brew-desc # DEAD
# brew-gem  # Installs gems to Cellar, see https://github.com/sportngin/brew-gem
# brew-pip	# see https://github.com/hanxue/brew-pip




########### notes ###########


# ==> Caveats
# ==> sqlite
# sqlite is keg-only, which means it was not symlinked into /Users/goofrider/.brew,
# because macOS already provides this software and installing another version in
# parallel can cause all kinds of trouble.
#
# If you need to have sqlite first in your PATH run:
#   echo 'export PATH="/Users/goofrider/.brew/opt/sqlite/bin:$PATH"' >> ~/.zshrc
#
# For compilers to find sqlite you may need to set:
#   export LDFLAGS="-L/Users/goofrider/.brew/opt/sqlite/lib"
#   export CPPFLAGS="-I/Users/goofrider/.brew/opt/sqlite/include"
#
# For pkg-config to find sqlite you may need to set:
#   export PKG_CONFIG_PATH="/Users/goofrider/.brew/opt/sqlite/lib/pkgconfig"
#
# ==> python@3.8
# Python has been installed as
#   /Users/goofrider/.brew/bin/python3
#
# Unversioned symlinks `python`, `python-config`, `pip` etc. pointing to
# `python3`, `python3-config`, `pip3` etc., respectively, have been installed into
#   /Users/goofrider/.brew/opt/python@3.8/libexec/bin
#
# You can install Python packages with
#   pip3 install <package>
# They will install into the site-package directory
#   /Users/goofrider/.brew/lib/python3.8/site-packages
#
# See: https://docs.brew.sh/Homebrew-and-Python




############## brew-list 2018 ##############

# android-platform-tools
# ansible
# appswitch		# unmaintained https://github.com/nriley/appswitch
# autojump
# chbspasswd	# A password generator inspired by XKCD 936
# direnv
# dirmngr
# dock
# gitbucket
# gnupg2
# go
# gpg-agent
# hub
# jsvc
# logstash
# mysql-connector-c
# notmuch
# osxutils
# pass
# platypus
# pyside
# pyside-tools
# qt
# redis
# sqlite
# tinyproxy
# todo-txt
# tree
# unrar
# vcsh
# xapian
# xz







